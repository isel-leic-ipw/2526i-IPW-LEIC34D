### User 2 (testing app)
@token = f1d1cdbc-97f0-41c4-b206-051250684b19

### Insert a task
POST http://localhost:8000/tasks
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "Study HTTP",
    "description": "Read the documentation."
}

### Insert another task
POST http://localhost:8000/tasks
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "Do class exercise",
    "description": "Implement the tasks web API application."
}

### Get all tasks
GET http://localhost:8000/tasks
Authorization: Bearer {{token}}

### Get task 1
GET http://localhost:8000/tasks/1
Authorization: Bearer {{token}}

### Update task 1
PUT http://localhost:8000/tasks/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "Do the assignment 2",
    "description": "Starting with OpenAPI documentation, then implement modules web API, services and data."
}

### Delete task 7
DELETE http://localhost:8000/tasks/7
Authorization: Bearer {{token}}

### Get all tasks (again)
GET http://localhost:8000/tasks
Authorization: Bearer {{token}}

### Get tasks with search
GET http://localhost:8000/tasks?search=web+API
Authorization: Bearer {{token}}



### GET ALL ERRORS

### Get tasks with empty token
GET http://localhost:8000/tasks
Authorization: Bearer

### Get tasks with wrong query string
GET http://localhost:8000/tasks?filter=web+API
Authorization: Bearer {{token}}

### POST ERRORS

### Insert a task without token
POST http://localhost:8000/tasks
Content-Type: application/json

{
    "title": "Study HTTP",
    "description": "Read the documentation"
}

### Insert a task with invalid body
POST http://localhost:8000/tasks
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "Study HTTP"
}

### GET ID ERRORS

### Get tasks without token
GET http://localhost:8000/tasks/1

### Get task with inexistent id
GET http://localhost:8000/tasks/100
Authorization: Bearer {{token}}

### Get task with invalid user
GET http://localhost:8000/tasks/2
Authorization: Bearer {{token}}

### Get task with invalid parameter).
GET http://localhost:8000/tasks/-1
Authorization: Bearer {{token}}

### DELETE ID ERRORS

### Delete task without a token
DELETE http://localhost:8000/tasks/1

### Delete task with inexistent id
DELETE http://localhost:8000/tasks/2
Authorization: Bearer {{token}}

### Delete task with invalid id
DELETE http://localhost:8000/tasks/a
Authorization: Bearer {{token}}

### PUT ID ERRORS

### Replace task without a token
PUT http://localhost:8000/tasks/1

{
    "title": "Relax",
    "description": "Go chill..."
}

### Replace task with inexistent id (but valid)
PUT http://localhost:8000/tasks/2
Authorization: Bearer {{token}}

{
    "title": "Relax",
    "description": "Go chill..."
}

### Replace task with invalid id
PUT http://localhost:8000/tasks/t1
Authorization: Bearer {{token}}

{
    "title": "Relax",
    "description": "Go chill..."
}

### Replace task with invalid body
PUT http://localhost:8000/tasks/1
Authorization: Bearer {{token}}

{
    "title": "Do the assignment 2",
}



### Final get all tasks to verify if change something
GET http://localhost:8000/tasks
Authorization: Bearer {{token}}